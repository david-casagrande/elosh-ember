{"version":3,"sources":["vendor/ember-cli/app-prefix.js","elosh-client/adapters/about.js","elosh-client/adapters/application.js","elosh-client/adapters/contact.js","elosh-client/app.js","elosh-client/components/art-modal.js","elosh-client/components/max-width.js","elosh-client/components/nav-section.js","elosh-client/controllers/application.js","elosh-client/initializers/app-version.js","elosh-client/initializers/export-application-global.js","elosh-client/mixins/components/art-modal-close-intent.js","elosh-client/mixins/components/art-modal-height-management.js","elosh-client/mixins/components/art-modal-keyboard-navigation.js","elosh-client/mixins/components/art-modal-loading-management.js","elosh-client/mixins/routes/redirect-to-first-item.js","elosh-client/mixins/routes/scroll-to-top.js","elosh-client/models/about.js","elosh-client/models/artwork-category.js","elosh-client/models/artwork.js","elosh-client/models/book.js","elosh-client/models/contact.js","elosh-client/models/image-object.js","elosh-client/router.js","elosh-client/routes/about.js","elosh-client/routes/application.js","elosh-client/routes/artwork.js","elosh-client/routes/artwork/category.js","elosh-client/routes/artwork/category/show.js","elosh-client/routes/artwork/index.js","elosh-client/routes/books/index.js","elosh-client/routes/books/show.js","elosh-client/routes/books/show/book-page.js","elosh-client/routes/index.js","elosh-client/serializers/about.js","elosh-client/serializers/application.js","elosh-client/serializers/artwork-category.js","elosh-client/serializers/artwork.js","elosh-client/serializers/book.js","elosh-client/templates/about.js","elosh-client/templates/application.js","elosh-client/templates/artwork/category.js","elosh-client/templates/artwork/category/show.js","elosh-client/templates/books/show.js","elosh-client/templates/books/show/book-page.js","elosh-client/templates/components/art-modal.js","elosh-client/templates/components/max-width.js","elosh-client/templates/components/nav-section.js","elosh-client/templates/loading.js","elosh-client/templates/partials/-artwork-thumbnails.js","elosh-client/templates/partials/-book-thumbnails.js","elosh-client/templates/partials/-main-navigation.js","elosh-client/tests/adapters/about.jshint.js","elosh-client/tests/adapters/application.jshint.js","elosh-client/tests/adapters/contact.jshint.js","elosh-client/tests/app.jshint.js","elosh-client/tests/components/art-modal.jshint.js","elosh-client/tests/components/max-width.jshint.js","elosh-client/tests/components/nav-section.jshint.js","elosh-client/tests/controllers/application.jshint.js","elosh-client/tests/helpers/resolver.js","elosh-client/tests/helpers/resolver.jshint.js","elosh-client/tests/helpers/start-app.js","elosh-client/tests/helpers/start-app.jshint.js","elosh-client/tests/mixins/components/art-modal-close-intent.jshint.js","elosh-client/tests/mixins/components/art-modal-height-management.jshint.js","elosh-client/tests/mixins/components/art-modal-keyboard-navigation.jshint.js","elosh-client/tests/mixins/components/art-modal-loading-management.jshint.js","elosh-client/tests/mixins/routes/redirect-to-first-item.jshint.js","elosh-client/tests/mixins/routes/scroll-to-top.jshint.js","elosh-client/tests/models/about.jshint.js","elosh-client/tests/models/artwork-category.jshint.js","elosh-client/tests/models/artwork.jshint.js","elosh-client/tests/models/book.jshint.js","elosh-client/tests/models/contact.jshint.js","elosh-client/tests/models/image-object.jshint.js","elosh-client/tests/router.jshint.js","elosh-client/tests/routes/about.jshint.js","elosh-client/tests/routes/application.jshint.js","elosh-client/tests/routes/artwork.jshint.js","elosh-client/tests/routes/artwork/category.jshint.js","elosh-client/tests/routes/artwork/category/show.jshint.js","elosh-client/tests/routes/artwork/index.jshint.js","elosh-client/tests/routes/books/index.jshint.js","elosh-client/tests/routes/books/show.jshint.js","elosh-client/tests/routes/books/show/book-page.jshint.js","elosh-client/tests/routes/index.jshint.js","elosh-client/tests/serializers/about.jshint.js","elosh-client/tests/serializers/application.jshint.js","elosh-client/tests/serializers/artwork-category.jshint.js","elosh-client/tests/serializers/artwork.jshint.js","elosh-client/tests/serializers/book.jshint.js","elosh-client/tests/test-helper.js","elosh-client/tests/test-helper.jshint.js","elosh-client/tests/unit/initializers/preload-artwork-test.js","elosh-client/tests/unit/initializers/preload-artwork-test.jshint.js","elosh-client/tests/views/application.jshint.js","elosh-client/views/application.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["/* jshint ignore:start */\n\n/* jshint ignore:end */\n","define('elosh-client/adapters/about', ['exports', 'elosh-client/adapters/application'], function (exports, ApplicationAdapter) {\n\n  'use strict';\n\n  exports['default'] = ApplicationAdapter['default'].extend({\n\n    buildURL: function buildURL(type, id) {\n      var url = this._super(type, id) + '?action=get_about';\n      return url;\n    }\n\n  });\n\n});","define('elosh-client/adapters/application', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].ActiveModelAdapter.extend({\n\n    buildURL: function buildURL() {\n      return '/wp-admin/admin-ajax.php';\n    }\n\n  });\n\n});","define('elosh-client/adapters/contact', ['exports', 'elosh-client/adapters/application'], function (exports, ApplicationAdapter) {\n\n  'use strict';\n\n  exports['default'] = ApplicationAdapter['default'].extend({\n\n    buildURL: function buildURL(type, id) {\n      var url = this._super(type, id) + '?action=get_contact';\n      return url;\n    }\n\n  });\n\n});","define('elosh-client/app', ['exports', 'ember', 'ember/resolver', 'elosh-client/config/environment'], function (exports, Ember, Resolver, config) {\n\n  'use strict';\n\n  var App;\n\n  Ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  App = Ember['default'].Application.extend({\n    modulePrefix: config['default'].modulePrefix,\n    Resolver: Resolver['default']\n  });\n\n  exports['default'] = App;\n\n});","define('elosh-client/components/art-modal', ['exports', 'ember', 'elosh-client/mixins/components/art-modal-height-management', 'elosh-client/mixins/components/art-modal-loading-management', 'elosh-client/mixins/components/art-modal-keyboard-navigation', 'elosh-client/mixins/components/art-modal-close-intent'], function (exports, Ember, HeightManagement, LoadingManagement, KeyboardNavigation, CloseIntent) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend(HeightManagement['default'], LoadingManagement['default'], KeyboardNavigation['default'], CloseIntent['default'], {\n\n    classNames: ['art-modal'],\n\n    actions: {\n      closeModal: function closeModal() {\n        this.sendAction('closeModal');\n      },\n      nextItem: function nextItem() {\n        this.sendAction('nextItem', this.get('art'));\n      },\n      previousItem: function previousItem() {\n        this.sendAction('previousItem', this.get('art'));\n      }\n    },\n\n    _parseKeyPress: function _parseKeyPress(e) {\n      if (!this.get('imageLoaded')) {\n        return;\n      }\n      this._super(e);\n    }\n\n  });\n\n});","define('elosh-client/components/max-width', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n\n    attributeBindings: ['style'],\n\n    style: Ember['default'].computed('width', {\n      get: function get() {\n        var width = this.get('width') ? this.get('width') : 0;\n        return new Ember['default'].Handlebars.SafeString('max-width: ' + width + 'px;');\n      }\n    })\n  });\n\n});","define('elosh-client/components/nav-section', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n\n    classNames: ['section'],\n    open: false,\n\n    closedHeight: 20,\n    openHeight: 0,\n\n    attributeBindings: ['style'],\n\n    style: Ember['default'].computed('open', 'openHeight', {\n      get: function get() {\n        var sectionHeight = this.get('open') ? this.get('openHeight') : this.get('closedHeight');\n        return new Ember['default'].Handlebars.SafeString('height: ' + sectionHeight + 'px;');\n      }\n    }),\n\n    _setOpenHeight: (function () {\n      var height = this.$().find('.links').outerHeight();\n      this.set('openHeight', height + this.get('closedHeight'));\n    }).on('didInsertElement'),\n\n    // _currentPathChange: Ember.observer(function() {\n    //\n    // }\n\n    _currentPathChange: (function () {\n      var parentRoute = this.get('currentPath').split('.').objectAt(0),\n          open = parentRoute === this.get('path');\n\n      this.set('open', open);\n    }).observes('currentPath').on('init')\n\n  });\n\n});","define('elosh-client/controllers/application', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n    modalOpen: false,\n\n    themeDirectory: Ember['default'].computed({\n      get: function get() {\n        return window.ELOSH_THEME_DIRECTORY;\n      }\n    }),\n\n    logoURL: Ember['default'].computed('themeDirectory', {\n      get: function get() {\n        return this.get('themeDirectory') + '/assets/dist/images/elosh-logo.jpg';\n      }\n    }),\n\n    footerLogoURL: Ember['default'].computed('themeDirectory', {\n      get: function get() {\n        return this.get('themeDirectory') + '/assets/dist/images/elosh-footer.jpg';\n      }\n    })\n  });\n\n});","define('elosh-client/initializers/app-version', ['exports', 'elosh-client/config/environment', 'ember'], function (exports, config, Ember) {\n\n  'use strict';\n\n  var classify = Ember['default'].String.classify;\n  var registered = false;\n\n  exports['default'] = {\n    name: 'App Version',\n    initialize: function initialize(container, application) {\n      if (!registered) {\n        var appName = classify(application.toString());\n        Ember['default'].libraries.register(appName, config['default'].APP.version);\n        registered = true;\n      }\n    }\n  };\n\n});","define('elosh-client/initializers/export-application-global', ['exports', 'ember', 'elosh-client/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize() {\n    var application = arguments[1] || arguments[0];\n    if (config['default'].exportApplicationGlobal !== false) {\n      var value = config['default'].exportApplicationGlobal;\n      var globalName;\n\n      if (typeof value === 'string') {\n        globalName = value;\n      } else {\n        globalName = Ember['default'].String.classify(config['default'].modulePrefix);\n      }\n\n      if (!window[globalName]) {\n        window[globalName] = application;\n\n        application.reopen({\n          willDestroy: function willDestroy() {\n            this._super.apply(this, arguments);\n            delete window[globalName];\n          }\n        });\n      }\n    }\n  }\n\n  exports['default'] = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n\n});","define('elosh-client/mixins/components/art-modal-close-intent', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Mixin.create({\n\n    closeIntentBindingId: null,\n\n    _setupCloseIntent: (function () {\n      this._setCloseIntentBindingId();\n      this._setCloseIntent();\n    }).on('didInsertElement'),\n\n    _setCloseIntentBindingId: function _setCloseIntentBindingId() {\n      var id = ['click', 'artModalComponent', this.get('elementId')];\n      this.set('closeIntentBindingId', id.join('.'));\n    },\n\n    _setCloseIntent: function _setCloseIntent() {\n      var _this = this;\n\n      var win = Ember['default'].$(window);\n      win.on(this.get('closeIntentBindingId'), function (e) {\n        _this._parseClickEvent(e);\n      });\n    },\n\n    _parseClickEvent: function _parseClickEvent(e) {\n      var target = Ember['default'].$(e.target),\n          parents = target.parents('#modal .margin');\n\n      if (parents.length < 1 && this.get('imageLoaded')) {\n        this.send('closeModal');\n      }\n    },\n\n    _teardownCloseIntent: (function () {\n      Ember['default'].$(window).off(this.get('closeIntentBindingId'));\n    }).on('willDestroyElement')\n\n  });\n\n});","define('elosh-client/mixins/components/art-modal-height-management', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Mixin.create({\n\n    artModalBindingId: null,\n\n    setupHeightManagement: (function () {\n      this._setArtModalBindingId();\n      this._setArtModalManagement();\n    }).on('didInsertElement'),\n\n    _setArtModalBindingId: function _setArtModalBindingId() {\n      var id = ['resize', 'artModalComponent', this.get('elementId')];\n      this.set('artModalBindingId', id.join('.'));\n    },\n\n    _setArtModalManagement: function _setArtModalManagement() {\n      var _this = this;\n\n      var win = Ember['default'].$(window);\n      this._setHeight(win);\n      win.on(this.get('artModalBindingId'), function () {\n        _this._setHeight(win);\n      });\n    },\n\n    _setHeight: function _setHeight(win) {\n      var marginTotal = 80,\n          //80 for outside margin\n      modalPadding = 40,\n          windowHeight = win.outerHeight(),\n          detailsHeight = this.$().find('.artwork-details').outerHeight();\n\n      var modalHeight = windowHeight - marginTotal - modalPadding - detailsHeight;\n\n      this.$().css({ height: windowHeight - marginTotal });\n      this.$().find('.art-modal-image').css({\n        height: modalHeight,\n        'line-height': modalHeight + 'px'\n      });\n    },\n\n    teardownHeightManagement: (function () {\n      Ember['default'].$(window).off(this.get('artModalBindingId'));\n    }).on('willDestroyElement')\n\n  });\n\n});","define('elosh-client/mixins/components/art-modal-keyboard-navigation', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Mixin.create({\n\n    keyboardNavigationBindingId: null,\n\n    _setupKeyboardNavigation: (function () {\n      this._setKeyboardNavigationBindingId();\n      this._setKeyboardNavigationManagement();\n    }).on('didInsertElement'),\n\n    _setKeyboardNavigationBindingId: function _setKeyboardNavigationBindingId() {\n      var id = ['keyup', 'artModalComponent', this.get('elementId')];\n      this.set('keyboardNavigationBindingId', id.join('.'));\n    },\n\n    _setKeyboardNavigationManagement: function _setKeyboardNavigationManagement() {\n      var _this = this;\n\n      var win = Ember['default'].$(window);\n      win.on(this.get('keyboardNavigationBindingId'), function (e) {\n        _this._parseKeyPress(e);\n      });\n    },\n\n    _parseKeyPress: function _parseKeyPress(e) {\n      var keyCode = e.keyCode;\n      if (keyCode !== 37 && keyCode !== 39) {\n        return;\n      }\n      var action = keyCode === 37 ? 'previousItem' : 'nextItem';\n      this.send(action);\n    },\n\n    _teardownKeyboardNavigationManagement: (function () {\n      Ember['default'].$(window).off(this.get('keyboardNavigationBindingId'));\n    }).on('willDestroyElement')\n\n  });\n\n});","define('elosh-client/mixins/components/art-modal-loading-management', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  /* global ProgressBar */\n\n  var ImageDataStore = {};\n\n  exports['default'] = Ember['default'].Mixin.create({\n\n    imageLoaded: false,\n    imageDataUrl: null,\n    hideOverlay: false,\n\n    progressLoaderDuration: 400,\n\n    _setup: (function () {\n      this.set('progress', this._createProgressBar());\n      this._loadImage();\n    }).on('didInsertElement'),\n\n    _teardown: (function () {\n      this.get('progress').destroy();\n    }).on('willDestroyElement'),\n\n    _createProgressBar: function _createProgressBar() {\n      return new ProgressBar.Circle('#progress-circle', {\n        color: '#ccc',\n        strokeWidth: 8,\n        fill: '#fff',\n        duration: this.get('progressLoaderDuration')\n      });\n    },\n\n    _loadImage: function _loadImage() {\n      var artUrl = this.get('art.image.url');\n      if (typeof ImageDataStore[artUrl] !== 'undefined') {\n        this._setImageData(ImageDataStore[artUrl]);\n        this.get('progress').animate(1);\n      } else {\n        var self = this;\n        var oReq = new XMLHttpRequest();\n        oReq.onload = function () {\n          self._readFile(this.response);\n        };\n        oReq.onprogress = function (e) {\n          var p = parseFloat(e.loaded / e.total).toFixed(2),\n              progress = self.get('progress');\n\n          progress.stop();\n          progress.animate(p);\n        };\n        oReq.open('get', this.get('art.image.url'), true);\n        oReq.responseType = 'blob';\n        oReq.send();\n      }\n    },\n\n    _readFile: function _readFile(blob) {\n      var self = this;\n      var reader = new FileReader();\n      reader.onloadend = function () {\n        self._setImageData(reader.result);\n      };\n      reader.readAsDataURL(blob);\n    },\n\n    _setImageData: function _setImageData(dataUrl) {\n      this.set('imageDataUrl', dataUrl);\n      this._setImageLoaded();\n      this._cacheImageData(dataUrl);\n    },\n\n    _cacheImageData: function _cacheImageData(dataUrl) {\n      var artUrl = this.get('art.image.url');\n      if (typeof ImageDataStore[artUrl] !== 'undefined') {\n        return;\n      }\n      ImageDataStore[artUrl] = dataUrl;\n    },\n\n    _setImageLoaded: function _setImageLoaded() {\n      Ember['default'].run.later(this, function () {\n        this.set('imageLoaded', true);\n        this._hideLoadingOverlay();\n      }, this.get('progressLoaderDuration'));\n    },\n\n    _hideLoadingOverlay: function _hideLoadingOverlay() {\n      Ember['default'].run.later(this, function () {\n        if (this.get('isDestroyed') || this.get('isDestroying')) {\n          return;\n        }\n        this.set('hideOverlay', true);\n      }, 2000); // 2s via .loaded class fades out overlay time\n    }\n  });\n\n});","define('elosh-client/mixins/routes/redirect-to-first-item', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Mixin.create({\n\n    appModelName: null,\n    appModelRoute: null,\n\n    redirect: function redirect() {\n      var appModels = this.modelFor('application'),\n          models = appModels[this.get('appModelName')],\n          firstModel = models ? models.get('firstObject') : null,\n          slug = firstModel ? firstModel.get('slug') : null;\n\n      if (slug) {\n        var route = this.get('appModelRoute');\n        this.transitionTo(route, slug);\n      }\n    }\n\n  });\n\n});","define('elosh-client/mixins/routes/scroll-to-top', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Mixin.create({\n\n    beforeModel: function beforeModel() {\n      Ember['default'].$('#app-window').scrollTop(0);\n      this._super();\n    }\n\n  });\n\n});","define('elosh-client/models/about', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  var a = DS['default'].attr,\n      b = DS['default'].belongsTo;\n\n  exports['default'] = DS['default'].Model.extend({\n    image: b('imageObject'),\n    narrativeOne: a('string'),\n    narrativeTwo: a('string')\n  });\n\n});","define('elosh-client/models/artwork-category', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  var a = DS['default'].attr;\n\n  exports['default'] = DS['default'].Model.extend({\n    name: a('string'),\n    categoryDescription: a('string'),\n    slug: a('string')\n  });\n\n});","define('elosh-client/models/artwork', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  var a = DS['default'].attr,\n      b = DS['default'].belongsTo;\n\n  exports['default'] = DS['default'].Model.extend({\n    bookTitle: a('string'),\n    categories: a(),\n    description: a('string'),\n    medium: a('string'),\n    slug: a('string'),\n    title: a('string'),\n\n    image: b('imageObject'),\n    thumbnail: b('imageObject')\n  });\n\n});","define('elosh-client/models/book', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  var a = DS['default'].attr,\n      b = DS['default'].belongsTo,\n      h = DS['default'].hasMany;\n\n  exports['default'] = DS['default'].Model.extend({\n    title: a('string'),\n    titleNotes: a('string'),\n    bannerImage: b('imageObject'),\n    coverImage: b('imageObject'),\n    narrative: a('string'),\n    slug: a('string'),\n    bookPages: h('artwork')\n  });\n\n});","define('elosh-client/models/contact', ['exports', 'ember-data', 'ember'], function (exports, DS, Ember) {\n\n  'use strict';\n\n  var a = DS['default'].attr;\n\n  exports['default'] = DS['default'].Model.extend({\n    contactNarrative: a('string'),\n    email: a('string'),\n    phone: a('string'),\n    twitter: a('string'),\n    storeLink: a('string'),\n\n    mailTo: Ember['default'].computed('email', {\n      get: function get() {\n        return this.get('email') ? 'mailto:' + this.get('email') : null;\n      }\n    }),\n\n    twitterLink: Ember['default'].computed('twitter', {\n      get: function get() {\n        return this.get('twitter') ? 'https://twitter.com/' + this.get('twitter') : null;\n      }\n    })\n  });\n\n});","define('elosh-client/models/image-object', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  var a = DS['default'].attr;\n\n  exports['default'] = DS['default'].Model.extend({\n    url: a('string'),\n    height: a('number'),\n    width: a('number')\n  });\n\n});","define('elosh-client/router', ['exports', 'ember', 'elosh-client/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  var Router = Ember['default'].Router.extend({\n    location: config['default'].locationType\n  });\n\n  Router.map(function () {\n\n    this.resource('artwork', function () {\n      this.route('category', { path: ':category_slug' }, function () {\n        this.route('show', { path: ':artwork_slug' });\n      });\n    });\n\n    this.resource('books', function () {\n      this.route('show', { path: ':book_slug' }, function () {\n        this.route('bookPage', { path: ':book_page' });\n      });\n    });\n\n    this.route('about');\n  });\n\n  exports['default'] = Router;\n\n});","define('elosh-client/routes/about', ['exports', 'ember', 'elosh-client/mixins/routes/scroll-to-top'], function (exports, Ember, ScrollToTop) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend(ScrollToTop['default'], {\n\n    model: function model() {\n      return Ember['default'].RSVP.hash({\n        about: this.modelFor('application').about,\n        contact: this.modelFor('application').contact\n      });\n      //return this.get('store').find('about', 1);\n    },\n\n    setupController: function setupController(controller, model) {\n      this._super(controller, model);\n\n      // controller.setProperties({\n      //   model: model.about,\n      //   contact: model.contact\n      // });\n      // var contactModel = this.modelFor('application').contact;\n      // controller.set('contact', contactModel);\n    }\n\n  });\n\n});","define('elosh-client/routes/application', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n\n    model: function model() {\n      var store = this.get('store');\n      return Ember['default'].RSVP.hash({\n        books: store.find('book', { 'action': 'get_books' }),\n        artworkCategories: store.find('artworkCategory', { 'action': 'get_artwork_categories' }),\n        contact: store.find('contact', 1),\n        about: store.find('about', 1),\n        artwork: store.find('artwork', { 'action': 'get_artwork' })\n      });\n    },\n\n    afterModel: function afterModel() {\n      return new Ember['default'].RSVP.Promise(function (resolve) {\n        //Ember.run.later(() => {\n        Ember['default'].$('#elosh-stub').remove();\n        resolve();\n        //}, 2000);\n      });\n    },\n\n    actions: {\n      openModal: function openModal(opts) {\n        this._renderModal(opts);\n      },\n      closeModal: function closeModal() {\n        this._disconnectModal();\n      },\n      willTransition: function willTransition() {\n        this._disconnectModal();\n        return true;\n      }\n    },\n\n    _renderModal: function _renderModal(opts) {\n      var template = opts.template,\n          data = {\n        into: 'application',\n        outlet: 'modal'\n      };\n\n      if (opts.controller) {\n        data.controller = opts.controller;\n      }\n      this.render(template, data);\n      this.get('controller').set('modalOpen', true);\n    },\n\n    _disconnectModal: function _disconnectModal() {\n      this.get('controller').set('modalOpen', false);\n      this.disconnectOutlet({ outlet: 'modal', parentView: 'application' });\n    }\n\n  });\n\n});","define('elosh-client/routes/artwork', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n\n    _loadedArtwork: null,\n\n    model: function model() {\n      return this.modelFor('application').artwork;\n      // if(!this.get('_loadedArtwork')) {\n      //   var artwork = this.get('store').find('artwork', { 'action': 'get_artwork' });\n      //   this.set('_loadedArtwork', artwork);\n      // }\n      // return this.get('_loadedArtwork');\n    }\n\n  });\n\n});","define('elosh-client/routes/artwork/category', ['exports', 'ember', 'elosh-client/mixins/routes/scroll-to-top'], function (exports, Ember, ScrollToTop) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend(ScrollToTop['default'], {\n\n    actions: {\n      closeModal: function closeModal() {\n        var slug = this.get('controller.model.category.slug');\n        this.transitionTo('artwork.category', slug);\n        return true;\n      },\n      nextItem: function nextItem(art) {\n        this._transitionToArt(art);\n      },\n      previousItem: function previousItem(art) {\n        this._transitionToArt(art, true);\n      },\n      linkToArtModal: function linkToArtModal(art) {\n        this.transitionTo('artwork.category.show', art.get('slug'));\n      }\n    },\n\n    model: function model(params) {\n      var artwork = this.modelFor('artwork'),\n          artworkCategories = this.store.all('artworkCategory'),\n          category = artworkCategories.findBy('slug', params.category_slug);\n\n      artwork = artwork.filter(function (artwork) {\n        var categories = artwork.get('categories');\n        return categories.contains(params.category_slug);\n      });\n\n      return Ember['default'].Object.create({ artwork: artwork, category: category });\n    },\n\n    _transitionToArt: function _transitionToArt(art) {\n      var previous = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];\n\n      var allArtwork = this.get('controller.model.artwork'),\n          artIndex,\n          nextArtIndex;\n\n      allArtwork.find(function (artwork, idx) {\n        var found = artwork.get('id') === art.get('id');\n        if (found) {\n          artIndex = idx;\n        }\n        return found;\n      });\n\n      if (previous) {\n        nextArtIndex = artIndex !== 0 ? artIndex - 1 : allArtwork.get('length') - 1;\n      } else {\n        nextArtIndex = artIndex < allArtwork.get('length') - 1 ? artIndex + 1 : 0;\n      }\n\n      this.transitionTo('artwork.category.show', allArtwork.objectAt(nextArtIndex).get('slug'));\n    }\n\n  });\n\n});","define('elosh-client/routes/artwork/category/show', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n\n    model: function model(params) {\n      var artwork = this.store.all('artwork'),\n          art = artwork.findBy('slug', params.artwork_slug);\n\n      return art ? art : {};\n    },\n\n    renderTemplate: function renderTemplate(controller) {\n      this.send('openModal', { template: 'artwork.category.show', controller: controller });\n    }\n\n  });\n\n});","define('elosh-client/routes/artwork/index', ['exports', 'ember', 'elosh-client/mixins/routes/redirect-to-first-item'], function (exports, Ember, RedirectToFirstItem) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend(RedirectToFirstItem['default'], {\n\n    appModelName: 'artworkCategories',\n    appModelRoute: 'artwork.category'\n\n  });\n\n});","define('elosh-client/routes/books/index', ['exports', 'ember', 'elosh-client/mixins/routes/redirect-to-first-item'], function (exports, Ember, RedirectToFirstItem) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend(RedirectToFirstItem['default'], {\n\n    appModelName: 'books',\n    appModelRoute: 'books.show'\n\n  });\n\n});","define('elosh-client/routes/books/show', ['exports', 'ember', 'elosh-client/mixins/routes/scroll-to-top'], function (exports, Ember, ScrollToTop) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend(ScrollToTop['default'], {\n\n    actions: {\n      closeModal: function closeModal() {\n        var slug = this.get('controller.model.slug');\n        this.transitionTo('books.show', slug);\n        return true;\n      },\n      nextItem: function nextItem(bookPage) {\n        this._transitionToBookPage(bookPage);\n      },\n      previousItem: function previousItem(bookPage) {\n        this._transitionToBookPage(bookPage, true);\n      },\n      linkToArtModal: function linkToArtModal(bookPage) {\n        this.transitionTo('books.show.bookPage', bookPage.get('slug'));\n      }\n    },\n\n    model: function model(params) {\n      var books = this.store.all('book'),\n          book = books.findBy('slug', params.book_slug);\n\n      return book ? book : {};\n    },\n\n    _transitionToBookPage: function _transitionToBookPage(bookPage) {\n      var previous = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];\n\n      var bookPages = this.get('controller.model.bookPages'),\n          bookIndex,\n          nextBookIndex;\n\n      bookPages.find(function (page, idx) {\n        var found = page.get('id') === bookPage.get('id');\n        if (found) {\n          bookIndex = idx;\n        }\n        return found;\n      });\n\n      if (previous) {\n        nextBookIndex = bookIndex !== 0 ? bookIndex - 1 : bookPages.get('length') - 1;\n      } else {\n        nextBookIndex = bookIndex < bookPages.get('length') - 1 ? bookIndex + 1 : 0;\n      }\n\n      this.transitionTo('books.show.bookPage', bookPages.objectAt(nextBookIndex).get('slug'));\n    }\n\n  });\n\n});","define('elosh-client/routes/books/show/book-page', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n\n    model: function model(params) {\n      var artwork = this.store.all('artwork'),\n          art = artwork.findBy('slug', params.book_page);\n\n      return art ? art : {};\n    },\n\n    renderTemplate: function renderTemplate(controller) {\n      this.send('openModal', { template: 'books.show.bookPage', controller: controller });\n    }\n\n  });\n\n});","define('elosh-client/routes/index', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n\n    redirect: function redirect() {\n      this.transitionTo('artwork');\n    }\n\n  });\n\n});","define('elosh-client/serializers/about', ['exports', 'elosh-client/serializers/application', 'ember-data'], function (exports, ApplicationSerializer, DS) {\n\n  'use strict';\n\n  exports['default'] = ApplicationSerializer['default'].extend(DS['default'].EmbeddedRecordsMixin, {\n\n    attrs: {\n      image: { embedded: 'always' }\n    }\n\n  });\n\n});","define('elosh-client/serializers/application', ['exports', 'ember-data'], function (exports, DS) {\n\n\t'use strict';\n\n\texports['default'] = DS['default'].ActiveModelSerializer;\n\n});","define('elosh-client/serializers/artwork-category', ['exports', 'elosh-client/serializers/application'], function (exports, ApplicationSerializer) {\n\n  'use strict';\n\n  exports['default'] = ApplicationSerializer['default'].extend({\n\n    normalizePayload: function normalizePayload(payload) {\n      payload.artwork_categories.forEach(function (category) {\n        category.id = category.term_id;\n      });\n      return payload;\n    }\n\n  });\n\n});","define('elosh-client/serializers/artwork', ['exports', 'elosh-client/serializers/application', 'ember-data'], function (exports, ApplicationSerializer, DS) {\n\n  'use strict';\n\n  exports['default'] = ApplicationSerializer['default'].extend(DS['default'].EmbeddedRecordsMixin, {\n\n    attrs: {\n      thumbnail: { embedded: 'always' },\n      image: { embedded: 'always' }\n    }\n\n  });\n\n});","define('elosh-client/serializers/book', ['exports', 'elosh-client/serializers/application', 'ember-data'], function (exports, ApplicationSerializer, DS) {\n\n  'use strict';\n\n  exports['default'] = ApplicationSerializer['default'].extend(DS['default'].EmbeddedRecordsMixin, {\n\n    attrs: {\n      bannerImage: { embedded: 'always' },\n      coverImage: { embedded: 'always' },\n      bookPages: { embedded: 'always' }\n    }\n\n  });\n\n});","define('elosh-client/templates/about', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.12.0\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"          \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"p\");\n            var el2 = dom.createElement(\"a\");\n            dom.setAttribute(el2,\"title\",\"Email Eric Losh\");\n            dom.setAttribute(el2,\"target\",\"_blank\");\n            var el3 = dom.createComment(\"\");\n            dom.appendChild(el2, el3);\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, element = hooks.element, content = hooks.content;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var element1 = dom.childAt(fragment, [1, 0]);\n            var morph0 = dom.createMorphAt(element1,0,0);\n            element(env, element1, context, \"bind-attr\", [], {\"href\": \"model.contact.mailTo\"});\n            content(env, morph0, context, \"model.contact.email\");\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.12.0\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"          \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"p\");\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, content = hooks.content;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);\n            content(env, morph0, context, \"model.contact.phone\");\n            return fragment;\n          }\n        };\n      }());\n      var child2 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.12.0\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"          \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"p\");\n            var el2 = dom.createTextNode(\"Twitter: \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createElement(\"a\");\n            dom.setAttribute(el2,\"target\",\"_blank\");\n            dom.setAttribute(el2,\"title\",\"Eric Losh's Twitter\");\n            var el3 = dom.createTextNode(\"@\");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createComment(\"\");\n            dom.appendChild(el2, el3);\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, element = hooks.element, content = hooks.content;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var element0 = dom.childAt(fragment, [1, 1]);\n            var morph0 = dom.createMorphAt(element0,1,1);\n            element(env, element0, context, \"bind-attr\", [], {\"href\": \"model.contact.twitterLink\"});\n            content(env, morph0, context, \"model.contact.twitter\");\n            return fragment;\n          }\n        };\n      }());\n      var child3 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.12.0\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"div\");\n            dom.setAttribute(el1,\"class\",\"narrative-one\");\n            var el2 = dom.createTextNode(\"\\n          \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, content = hooks.content;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createUnsafeMorphAt(dom.childAt(fragment, [1]),1,1);\n            content(env, morph0, context, \"model.about.narrativeOne\");\n            return fragment;\n          }\n        };\n      }());\n      var child4 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.12.0\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"div\");\n            dom.setAttribute(el1,\"class\",\"mini-border\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"div\");\n            dom.setAttribute(el1,\"class\",\"narrative-two\");\n            var el2 = dom.createTextNode(\"\\n          \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, content = hooks.content;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createUnsafeMorphAt(dom.childAt(fragment, [3]),1,1);\n            content(env, morph0, context, \"model.about.narrativeTwo\");\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.12.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"about-narratives\");\n          var el2 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"contact-info clear-fix\");\n          var el3 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"p\");\n          var el4 = dom.createElement(\"strong\");\n          var el5 = dom.createTextNode(\"ERIC LOSH\");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"      \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n\\n\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element2 = dom.childAt(fragment, [1]);\n          var element3 = dom.childAt(element2, [1]);\n          var morph0 = dom.createMorphAt(element3,3,3);\n          var morph1 = dom.createMorphAt(element3,4,4);\n          var morph2 = dom.createMorphAt(element3,5,5);\n          var morph3 = dom.createMorphAt(element2,3,3);\n          var morph4 = dom.createMorphAt(element2,5,5);\n          block(env, morph0, context, \"if\", [get(env, context, \"model.contact.email\")], {}, child0, null);\n          block(env, morph1, context, \"if\", [get(env, context, \"model.contact.phone\")], {}, child1, null);\n          block(env, morph2, context, \"if\", [get(env, context, \"model.contact.twitter\")], {}, child2, null);\n          block(env, morph3, context, \"if\", [get(env, context, \"model.about.narrativeOne\")], {}, child3, null);\n          block(env, morph4, context, \"if\", [get(env, context, \"model.about.narrativeTwo\")], {}, child4, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.12.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"id\",\"about\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"img\");\n        dom.setAttribute(el2,\"alt\",\"About Eric Losh\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, element = hooks.element, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element4 = dom.childAt(fragment, [0]);\n        var element5 = dom.childAt(element4, [1]);\n        var morph0 = dom.createMorphAt(element4,3,3);\n        element(env, element5, context, \"bind-attr\", [], {\"src\": \"model.about.image.url\"});\n        block(env, morph0, context, \"max-width\", [], {\"width\": get(env, context, \"model.about.image.width\")}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('elosh-client/templates/application', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.12.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"img\");\n          dom.setAttribute(el1,\"alt\",\"Eric Losh\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [0]);\n          element(env, element0, context, \"bind-attr\", [], {\"src\": get(env, context, \"logoURL\")});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.12.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"id\",\"left-nav\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"brand clear-fix\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"footer clear-fix\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"img\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"Web by \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"a\");\n        dom.setAttribute(el4,\"href\",\"https://github.com/david-casagrande\");\n        dom.setAttribute(el4,\"target\",\"_blank\");\n        dom.setAttribute(el4,\"title\",\"David Casagrande\");\n        var el5 = dom.createTextNode(\"David Casagrande\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"id\",\"app-window\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"margin\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"page clear-fix\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"id\",\"modal\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"margin\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, block = hooks.block, inline = hooks.inline, get = hooks.get, element = hooks.element, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element1 = dom.childAt(fragment, [0]);\n        var element2 = dom.childAt(element1, [5, 1]);\n        var element3 = dom.childAt(fragment, [4]);\n        var morph0 = dom.createMorphAt(dom.childAt(element1, [1]),1,1);\n        var morph1 = dom.createMorphAt(element1,3,3);\n        var morph2 = dom.createMorphAt(dom.childAt(fragment, [2, 1, 1]),1,1);\n        var morph3 = dom.createMorphAt(dom.childAt(element3, [1]),1,1);\n        block(env, morph0, context, \"link-to\", [\"index\"], {}, child0, null);\n        inline(env, morph1, context, \"partial\", [\"partials/main-navigation\"], {});\n        element(env, element2, context, \"bind-attr\", [], {\"src\": get(env, context, \"footerLogoURL\")});\n        content(env, morph2, context, \"outlet\");\n        element(env, element3, context, \"bind-attr\", [], {\"class\": \"modalOpen:show\"});\n        inline(env, morph3, context, \"outlet\", [\"modal\"], {});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('elosh-client/templates/artwork/category', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.12.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"artwork-category-image clear-fix\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"img\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1, 1]);\n          element(env, element0, context, \"bind-attr\", [], {\"src\": \"model.category.categoryDescription\", \"alt\": \"model.category.name\"});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.12.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h1\");\n        dom.setAttribute(el1,\"class\",\"artwork-category-title\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, get = hooks.get, block = hooks.block, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),0,0);\n        var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n        var morph2 = dom.createMorphAt(fragment,4,4,contextualElement);\n        content(env, morph0, context, \"model.category.name\");\n        block(env, morph1, context, \"if\", [get(env, context, \"model.category.categoryDescription\")], {}, child0, null);\n        inline(env, morph2, context, \"partial\", [\"partials/artwork-thumbnails\"], {});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('elosh-client/templates/artwork/category/show', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.12.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        inline(env, morph0, context, \"art-modal\", [], {\"art\": get(env, context, \"model\"), \"closeModal\": \"closeModal\", \"nextItem\": \"nextItem\", \"previousItem\": \"previousItem\"});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('elosh-client/templates/books/show', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.12.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"h1\");\n          dom.setAttribute(el1,\"class\",\"book-title\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\" \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"span\");\n          var el3 = dom.createTextNode(\"- \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var morph0 = dom.createMorphAt(element0,0,0);\n          var morph1 = dom.createMorphAt(dom.childAt(element0, [2]),1,1);\n          content(env, morph0, context, \"model.title\");\n          content(env, morph1, context, \"model.titleNotes\");\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.12.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"h1\");\n          dom.setAttribute(el1,\"class\",\"book-title\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);\n          content(env, morph0, context, \"model.title\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.12.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"id\",\"books\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"book-images clear-fix\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"book-banner-image\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"img\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"book-cover-image large-5-columns\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"img\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"id\",\"book-narrative-and-pages\");\n        dom.setAttribute(el2,\"class\",\"clear-fix\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"book-narrative\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"padding\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"book-pages\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"padding\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block, element = hooks.element, content = hooks.content, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element1 = dom.childAt(fragment, [0]);\n        var element2 = dom.childAt(element1, [3]);\n        var element3 = dom.childAt(element2, [1, 1]);\n        var element4 = dom.childAt(element2, [3, 1]);\n        var element5 = dom.childAt(element1, [5]);\n        var morph0 = dom.createMorphAt(element1,1,1);\n        var morph1 = dom.createUnsafeMorphAt(dom.childAt(element5, [1, 1]),1,1);\n        var morph2 = dom.createMorphAt(dom.childAt(element5, [3, 1]),1,1);\n        block(env, morph0, context, \"if\", [get(env, context, \"model.titleNotes\")], {}, child0, child1);\n        element(env, element3, context, \"bind-attr\", [], {\"src\": \"model.bannerImage.url\"});\n        element(env, element4, context, \"bind-attr\", [], {\"src\": \"model.coverImage.url\"});\n        content(env, morph1, context, \"model.narrative\");\n        inline(env, morph2, context, \"partial\", [\"partials/book-thumbnails\"], {});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('elosh-client/templates/books/show/book-page', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.12.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        inline(env, morph0, context, \"art-modal\", [], {\"art\": get(env, context, \"model\"), \"closeModal\": \"closeModal\", \"nextItem\": \"nextItem\", \"previousItem\": \"previousItem\"});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('elosh-client/templates/components/art-modal', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.12.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"img\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element1 = dom.childAt(fragment, [1]);\n          element(env, element1, context, \"bind-attr\", [], {\"src\": \"imageDataUrl\", \"alt\": \"art.title\"});\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.12.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"p\");\n          dom.setAttribute(el1,\"class\",\"art-title\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),0,0);\n          content(env, morph0, context, \"art.title\");\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.12.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"p\");\n          dom.setAttribute(el1,\"class\",\"book-title\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),0,0);\n          content(env, morph0, context, \"art.bookTitle\");\n          return fragment;\n        }\n      };\n    }());\n    var child3 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.12.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"p\");\n          dom.setAttribute(el1,\"class\",\"art-medium\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),0,0);\n          content(env, morph0, context, \"art.medium\");\n          return fragment;\n        }\n      };\n    }());\n    var child4 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.12.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"art-description\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createUnsafeMorphAt(dom.childAt(fragment, [0]),0,0);\n          content(env, morph0, context, \"art.description\");\n          return fragment;\n        }\n      };\n    }());\n    var child5 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.12.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"div\");\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"id\",\"progress-circle\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [0]);\n          element(env, element0, context, \"bind-attr\", [], {\"class\": \"imageLoaded:loaded :loading-overlay\"});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.12.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"art-modal-image\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"artwork-details\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"a\");\n        dom.setAttribute(el1,\"href\",\"#\");\n        dom.setAttribute(el1,\"class\",\"modal-navigation previous\");\n        var el2 = dom.createTextNode(\"Previous\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"a\");\n        dom.setAttribute(el1,\"href\",\"#\");\n        dom.setAttribute(el1,\"class\",\"modal-navigation next\");\n        var el2 = dom.createTextNode(\"Next\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"a\");\n        dom.setAttribute(el1,\"href\",\"#\");\n        dom.setAttribute(el1,\"class\",\"modal-navigation close\");\n        var el2 = dom.createTextNode(\"Close Modal\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block, element = hooks.element;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element2 = dom.childAt(fragment, [2]);\n        var element3 = dom.childAt(fragment, [5]);\n        var element4 = dom.childAt(fragment, [7]);\n        var element5 = dom.childAt(fragment, [9]);\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),1,1);\n        var morph1 = dom.createMorphAt(element2,1,1);\n        var morph2 = dom.createMorphAt(element2,3,3);\n        var morph3 = dom.createMorphAt(element2,5,5);\n        var morph4 = dom.createMorphAt(element2,7,7);\n        var morph5 = dom.createMorphAt(fragment,4,4,contextualElement);\n        block(env, morph0, context, \"if\", [get(env, context, \"imageDataUrl\")], {}, child0, null);\n        block(env, morph1, context, \"if\", [get(env, context, \"art.title\")], {}, child1, null);\n        block(env, morph2, context, \"if\", [get(env, context, \"art.bookTitle\")], {}, child2, null);\n        block(env, morph3, context, \"if\", [get(env, context, \"art.medium\")], {}, child3, null);\n        block(env, morph4, context, \"if\", [get(env, context, \"art.description\")], {}, child4, null);\n        block(env, morph5, context, \"unless\", [get(env, context, \"hideOverlay\")], {}, child5, null);\n        element(env, element3, context, \"action\", [\"previousItem\"], {});\n        element(env, element4, context, \"action\", [\"nextItem\"], {});\n        element(env, element5, context, \"action\", [\"closeModal\"], {});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('elosh-client/templates/components/max-width', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.12.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        content(env, morph0, context, \"yield\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('elosh-client/templates/components/nav-section', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.12.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        content(env, morph0, context, \"yield\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('elosh-client/templates/loading', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.12.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"id\",\"loading-route\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"margin\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h1\");\n        var el4 = dom.createTextNode(\"Loading\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"span\");\n        dom.setAttribute(el4,\"class\",\"first\");\n        var el5 = dom.createTextNode(\".\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"span\");\n        dom.setAttribute(el4,\"class\",\"second\");\n        var el5 = dom.createTextNode(\".\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"span\");\n        dom.setAttribute(el4,\"class\",\"third\");\n        var el5 = dom.createTextNode(\".\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('elosh-client/templates/partials/-artwork-thumbnails', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.12.0\",\n        blockParams: 1,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"li\");\n          var el2 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"img\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"p\");\n          dom.setAttribute(el2,\"class\",\"art-thumb-title\");\n          var el3 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"a\");\n          dom.setAttribute(el3,\"href\",\"#\");\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement, blockArguments) {\n          var dom = env.dom;\n          var hooks = env.hooks, set = hooks.set, get = hooks.get, element = hooks.element, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var element1 = dom.childAt(element0, [1]);\n          var morph0 = dom.createMorphAt(dom.childAt(element0, [3, 1]),0,0);\n          set(env, context, \"art\", blockArguments[0]);\n          element(env, element0, context, \"action\", [\"linkToArtModal\", get(env, context, \"art\")], {});\n          element(env, element1, context, \"bind-attr\", [], {\"src\": \"art.thumbnail.url\", \"alt\": \"art.title\"});\n          content(env, morph0, context, \"art.title\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.12.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"ul\");\n        dom.setAttribute(el1,\"class\",\"art-thumbs large-block-grid-4 medium-block-grid-3 small-block-grid-1\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),1,1);\n        block(env, morph0, context, \"each\", [get(env, context, \"model.artwork\")], {}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('elosh-client/templates/partials/-book-thumbnails', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.12.0\",\n        blockParams: 1,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"li\");\n          var el2 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"a\");\n          dom.setAttribute(el2,\"href\",\"#\");\n          var el3 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"img\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement, blockArguments) {\n          var dom = env.dom;\n          var hooks = env.hooks, set = hooks.set, get = hooks.get, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1, 1]);\n          var element1 = dom.childAt(element0, [1]);\n          set(env, context, \"bookPage\", blockArguments[0]);\n          element(env, element0, context, \"action\", [\"linkToArtModal\", get(env, context, \"bookPage\")], {});\n          element(env, element1, context, \"bind-attr\", [], {\"src\": \"bookPage.thumbnail.url\", \"alt\": \"bookPage.title\"});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.12.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"ul\");\n        dom.setAttribute(el1,\"class\",\"large-block-grid-2 small-block-grid-1\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),1,1);\n        block(env, morph0, context, \"each\", [get(env, context, \"model.bookPages\")], {}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('elosh-client/templates/partials/-main-navigation', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.12.0\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"Artwork\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.12.0\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, content = hooks.content;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n              dom.insertBoundary(fragment, null);\n              dom.insertBoundary(fragment, 0);\n              content(env, morph0, context, \"artworkCategory.name\");\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.12.0\",\n          blockParams: 1,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"          \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement, blockArguments) {\n            var dom = env.dom;\n            var hooks = env.hooks, set = hooks.set, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            set(env, context, \"artworkCategory\", blockArguments[0]);\n            block(env, morph0, context, \"link-to\", [\"artwork.category\", get(env, context, \"artworkCategory.slug\")], {}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.12.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"      \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"links\");\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"      \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, block = hooks.block, get = hooks.get;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          var morph1 = dom.createMorphAt(dom.childAt(fragment, [3]),1,1);\n          block(env, morph0, context, \"link-to\", [\"artwork\"], {\"classNames\": \"parent-link artwork\"}, child0, null);\n          block(env, morph1, context, \"each\", [get(env, context, \"model.artworkCategories\")], {}, child1, null);\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.12.0\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"Books\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.12.0\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, content = hooks.content;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n              dom.insertBoundary(fragment, null);\n              dom.insertBoundary(fragment, 0);\n              content(env, morph0, context, \"book.title\");\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.12.0\",\n          blockParams: 1,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"          \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement, blockArguments) {\n            var dom = env.dom;\n            var hooks = env.hooks, set = hooks.set, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            set(env, context, \"book\", blockArguments[0]);\n            block(env, morph0, context, \"link-to\", [\"books.show\", get(env, context, \"book.slug\")], {}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.12.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"      \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"links\");\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"      \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, block = hooks.block, get = hooks.get;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          var morph1 = dom.createMorphAt(dom.childAt(fragment, [3]),1,1);\n          block(env, morph0, context, \"link-to\", [\"books\"], {\"classNames\": \"parent-link books\"}, child0, null);\n          block(env, morph1, context, \"each\", [get(env, context, \"model.books\")], {}, child1, null);\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.12.0\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"          \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"p\");\n            var el2 = dom.createElement(\"a\");\n            dom.setAttribute(el2,\"title\",\"Email Eric Losh\");\n            dom.setAttribute(el2,\"target\",\"_blank\");\n            var el3 = dom.createComment(\"\");\n            dom.appendChild(el2, el3);\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, element = hooks.element, content = hooks.content;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var element0 = dom.childAt(fragment, [1, 0]);\n            var morph0 = dom.createMorphAt(element0,0,0);\n            element(env, element0, context, \"bind-attr\", [], {\"href\": \"model.contact.mailTo\"});\n            content(env, morph0, context, \"model.contact.email\");\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.12.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"      \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"links about\");\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"      \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, inline = hooks.inline, content = hooks.content, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element1 = dom.childAt(fragment, [3]);\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          var morph1 = dom.createUnsafeMorphAt(element1,1,1);\n          var morph2 = dom.createMorphAt(element1,3,3);\n          inline(env, morph0, context, \"link-to\", [\"About\", \"about\"], {\"classNames\": \"parent-link about\"});\n          content(env, morph1, context, \"model.contact.contactNarrative\");\n          block(env, morph2, context, \"if\", [get(env, context, \"model.contact.email\")], {}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.12.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"nav\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"artwork-nav\");\n        var el3 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"border artwork\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"border books\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"border about\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"section\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"a\");\n        dom.setAttribute(el4,\"class\",\"parent-link shop\");\n        dom.setAttribute(el4,\"target\",\"_blank\");\n        var el5 = dom.createTextNode(\"Shop\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"border shop\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block, element = hooks.element;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element2 = dom.childAt(fragment, [0, 1]);\n        var element3 = dom.childAt(element2, [13, 1]);\n        var morph0 = dom.createMorphAt(element2,1,1);\n        var morph1 = dom.createMorphAt(element2,5,5);\n        var morph2 = dom.createMorphAt(element2,9,9);\n        block(env, morph0, context, \"nav-section\", [], {\"currentPath\": get(env, context, \"currentPath\"), \"path\": \"artwork\"}, child0, null);\n        block(env, morph1, context, \"nav-section\", [], {\"currentPath\": get(env, context, \"currentPath\"), \"path\": \"books\"}, child1, null);\n        block(env, morph2, context, \"nav-section\", [], {\"currentPath\": get(env, context, \"currentPath\"), \"path\": \"about\"}, child2, null);\n        element(env, element3, context, \"bind-attr\", [], {\"href\": \"model.contact.storeLink\"});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('elosh-client/tests/adapters/about.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapters');\n  test('adapters/about.js should pass jshint', function() { \n    ok(true, 'adapters/about.js should pass jshint.'); \n  });\n\n});","define('elosh-client/tests/adapters/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapters');\n  test('adapters/application.js should pass jshint', function() { \n    ok(true, 'adapters/application.js should pass jshint.'); \n  });\n\n});","define('elosh-client/tests/adapters/contact.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapters');\n  test('adapters/contact.js should pass jshint', function() { \n    ok(true, 'adapters/contact.js should pass jshint.'); \n  });\n\n});","define('elosh-client/tests/app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('app.js should pass jshint', function() { \n    ok(true, 'app.js should pass jshint.'); \n  });\n\n});","define('elosh-client/tests/components/art-modal.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/art-modal.js should pass jshint', function() { \n    ok(true, 'components/art-modal.js should pass jshint.'); \n  });\n\n});","define('elosh-client/tests/components/max-width.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/max-width.js should pass jshint', function() { \n    ok(true, 'components/max-width.js should pass jshint.'); \n  });\n\n});","define('elosh-client/tests/components/nav-section.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/nav-section.js should pass jshint', function() { \n    ok(true, 'components/nav-section.js should pass jshint.'); \n  });\n\n});","define('elosh-client/tests/controllers/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/application.js should pass jshint', function() { \n    ok(true, 'controllers/application.js should pass jshint.'); \n  });\n\n});","define('elosh-client/tests/helpers/resolver', ['exports', 'ember/resolver', 'elosh-client/config/environment'], function (exports, Resolver, config) {\n\n  'use strict';\n\n  var resolver = Resolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n\n});","define('elosh-client/tests/helpers/resolver.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/resolver.js should pass jshint', function() { \n    ok(true, 'helpers/resolver.js should pass jshint.'); \n  });\n\n});","define('elosh-client/tests/helpers/start-app', ['exports', 'ember', 'elosh-client/app', 'elosh-client/router', 'elosh-client/config/environment'], function (exports, Ember, Application, Router, config) {\n\n  'use strict';\n\n\n\n  exports['default'] = startApp;\n  function startApp(attrs) {\n    var application;\n\n    var attributes = Ember['default'].merge({}, config['default'].APP);\n    attributes = Ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    Ember['default'].run(function () {\n      application = Application['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n\n});","define('elosh-client/tests/helpers/start-app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/start-app.js should pass jshint', function() { \n    ok(true, 'helpers/start-app.js should pass jshint.'); \n  });\n\n});","define('elosh-client/tests/mixins/components/art-modal-close-intent.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - mixins/components');\n  test('mixins/components/art-modal-close-intent.js should pass jshint', function() { \n    ok(true, 'mixins/components/art-modal-close-intent.js should pass jshint.'); \n  });\n\n});","define('elosh-client/tests/mixins/components/art-modal-height-management.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - mixins/components');\n  test('mixins/components/art-modal-height-management.js should pass jshint', function() { \n    ok(true, 'mixins/components/art-modal-height-management.js should pass jshint.'); \n  });\n\n});","define('elosh-client/tests/mixins/components/art-modal-keyboard-navigation.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - mixins/components');\n  test('mixins/components/art-modal-keyboard-navigation.js should pass jshint', function() { \n    ok(true, 'mixins/components/art-modal-keyboard-navigation.js should pass jshint.'); \n  });\n\n});","define('elosh-client/tests/mixins/components/art-modal-loading-management.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - mixins/components');\n  test('mixins/components/art-modal-loading-management.js should pass jshint', function() { \n    ok(true, 'mixins/components/art-modal-loading-management.js should pass jshint.'); \n  });\n\n});","define('elosh-client/tests/mixins/routes/redirect-to-first-item.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - mixins/routes');\n  test('mixins/routes/redirect-to-first-item.js should pass jshint', function() { \n    ok(true, 'mixins/routes/redirect-to-first-item.js should pass jshint.'); \n  });\n\n});","define('elosh-client/tests/mixins/routes/scroll-to-top.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - mixins/routes');\n  test('mixins/routes/scroll-to-top.js should pass jshint', function() { \n    ok(true, 'mixins/routes/scroll-to-top.js should pass jshint.'); \n  });\n\n});","define('elosh-client/tests/models/about.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/about.js should pass jshint', function() { \n    ok(true, 'models/about.js should pass jshint.'); \n  });\n\n});","define('elosh-client/tests/models/artwork-category.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/artwork-category.js should pass jshint', function() { \n    ok(true, 'models/artwork-category.js should pass jshint.'); \n  });\n\n});","define('elosh-client/tests/models/artwork.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/artwork.js should pass jshint', function() { \n    ok(true, 'models/artwork.js should pass jshint.'); \n  });\n\n});","define('elosh-client/tests/models/book.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/book.js should pass jshint', function() { \n    ok(true, 'models/book.js should pass jshint.'); \n  });\n\n});","define('elosh-client/tests/models/contact.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/contact.js should pass jshint', function() { \n    ok(true, 'models/contact.js should pass jshint.'); \n  });\n\n});","define('elosh-client/tests/models/image-object.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/image-object.js should pass jshint', function() { \n    ok(true, 'models/image-object.js should pass jshint.'); \n  });\n\n});","define('elosh-client/tests/router.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('router.js should pass jshint', function() { \n    ok(true, 'router.js should pass jshint.'); \n  });\n\n});","define('elosh-client/tests/routes/about.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/about.js should pass jshint', function() { \n    ok(true, 'routes/about.js should pass jshint.'); \n  });\n\n});","define('elosh-client/tests/routes/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/application.js should pass jshint', function() { \n    ok(true, 'routes/application.js should pass jshint.'); \n  });\n\n});","define('elosh-client/tests/routes/artwork.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/artwork.js should pass jshint', function() { \n    ok(true, 'routes/artwork.js should pass jshint.'); \n  });\n\n});","define('elosh-client/tests/routes/artwork/category.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/artwork');\n  test('routes/artwork/category.js should pass jshint', function() { \n    ok(true, 'routes/artwork/category.js should pass jshint.'); \n  });\n\n});","define('elosh-client/tests/routes/artwork/category/show.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/artwork/category');\n  test('routes/artwork/category/show.js should pass jshint', function() { \n    ok(true, 'routes/artwork/category/show.js should pass jshint.'); \n  });\n\n});","define('elosh-client/tests/routes/artwork/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/artwork');\n  test('routes/artwork/index.js should pass jshint', function() { \n    ok(true, 'routes/artwork/index.js should pass jshint.'); \n  });\n\n});","define('elosh-client/tests/routes/books/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/books');\n  test('routes/books/index.js should pass jshint', function() { \n    ok(true, 'routes/books/index.js should pass jshint.'); \n  });\n\n});","define('elosh-client/tests/routes/books/show.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/books');\n  test('routes/books/show.js should pass jshint', function() { \n    ok(true, 'routes/books/show.js should pass jshint.'); \n  });\n\n});","define('elosh-client/tests/routes/books/show/book-page.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/books/show');\n  test('routes/books/show/book-page.js should pass jshint', function() { \n    ok(true, 'routes/books/show/book-page.js should pass jshint.'); \n  });\n\n});","define('elosh-client/tests/routes/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/index.js should pass jshint', function() { \n    ok(true, 'routes/index.js should pass jshint.'); \n  });\n\n});","define('elosh-client/tests/serializers/about.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - serializers');\n  test('serializers/about.js should pass jshint', function() { \n    ok(true, 'serializers/about.js should pass jshint.'); \n  });\n\n});","define('elosh-client/tests/serializers/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - serializers');\n  test('serializers/application.js should pass jshint', function() { \n    ok(true, 'serializers/application.js should pass jshint.'); \n  });\n\n});","define('elosh-client/tests/serializers/artwork-category.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - serializers');\n  test('serializers/artwork-category.js should pass jshint', function() { \n    ok(true, 'serializers/artwork-category.js should pass jshint.'); \n  });\n\n});","define('elosh-client/tests/serializers/artwork.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - serializers');\n  test('serializers/artwork.js should pass jshint', function() { \n    ok(true, 'serializers/artwork.js should pass jshint.'); \n  });\n\n});","define('elosh-client/tests/serializers/book.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - serializers');\n  test('serializers/book.js should pass jshint', function() { \n    ok(true, 'serializers/book.js should pass jshint.'); \n  });\n\n});","define('elosh-client/tests/test-helper', ['elosh-client/tests/helpers/resolver', 'ember-qunit'], function (resolver, ember_qunit) {\n\n\t'use strict';\n\n\tember_qunit.setResolver(resolver['default']);\n\n});","define('elosh-client/tests/test-helper.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('test-helper.js should pass jshint', function() { \n    ok(true, 'test-helper.js should pass jshint.'); \n  });\n\n});","define('elosh-client/tests/unit/initializers/preload-artwork-test', ['ember', 'elosh-client/initializers/preload-artwork'], function (Ember, preload_artwork) {\n\n  'use strict';\n\n  var container, application;\n\n  module('PreloadArtworkInitializer', {\n    setup: function setup() {\n      Ember['default'].run(function () {\n        application = Ember['default'].Application.create();\n        container = application.__container__;\n        application.deferReadiness();\n      });\n    }\n  });\n\n  // Replace this with your real tests.\n  test('it works', function () {\n    preload_artwork.initialize(container, application);\n\n    // you would normally confirm the results of the initializer here\n    ok(true);\n  });\n\n});","define('elosh-client/tests/unit/initializers/preload-artwork-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/initializers');\n  test('unit/initializers/preload-artwork-test.js should pass jshint', function() { \n    ok(false, 'unit/initializers/preload-artwork-test.js should pass jshint.\\nunit/initializers/preload-artwork-test.js: line 6, col 1, \\'module\\' is not defined.\\nunit/initializers/preload-artwork-test.js: line 17, col 1, \\'test\\' is not defined.\\nunit/initializers/preload-artwork-test.js: line 21, col 3, \\'ok\\' is not defined.\\n\\n3 errors'); \n  });\n\n});","define('elosh-client/tests/views/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views');\n  test('views/application.js should pass jshint', function() { \n    ok(true, 'views/application.js should pass jshint.'); \n  });\n\n});","define('elosh-client/views/application', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].View.extend({});\n\n});","/* jshint ignore:start */\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\ndefine('elosh-client/config/environment', ['ember'], function(Ember) {\n  return { 'default': {\"modulePrefix\":\"elosh-client\",\"environment\":\"development\",\"baseURL\":\"/\",\"locationType\":\"auto\",\"EmberENV\":{\"FEATURES\":{}},\"APP\":{\"name\":\"elosh-client\",\"version\":\"0.0.0.cb00ad41\"},\"contentSecurityPolicyHeader\":\"Content-Security-Policy-Report-Only\",\"contentSecurityPolicy\":{\"default-src\":\"'none'\",\"script-src\":\"'self' 'unsafe-eval'\",\"font-src\":\"'self'\",\"connect-src\":\"'self'\",\"img-src\":\"'self'\",\"style-src\":\"'self'\",\"media-src\":\"'self'\"},\"exportApplicationGlobal\":true}};\n});\n\nif (runningTests) {\n  require(\"elosh-client/tests/test-helper\");\n} else {\n  require(\"elosh-client/app\")[\"default\"].create({\"name\":\"elosh-client\",\"version\":\"0.0.0.cb00ad41\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbnrvztjkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"elosh-client.js"}